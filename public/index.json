[
{
	"uri": "//localhost:1313/2-prerequiste/2.1-createiamuser/",
	"title": "Chuẩn bị IAM User",
	"tags": [],
	"description": "",
	"content": "Create IAM User Access the AWS Management Console interface Find and select IAM In the IAM interface, select User In the IAM User interface, select Create User In the IAM user creation interface, we follow these steps: User name enter data-lake-admin Tick Provide user access to the AWS Management Console - optional In the User type section, select I want to create an IAM user In the Console password section, you can choose to create a random password or manually In the Set permissions section, select Attach policies directly and add the following Permissions policies: AmazonS3FullAccess AmazonAthenaFullAccess AWSGlueConsoleFullAccess AWSLakeFormationDataAdmin CloudWatchLogsFullAccess Then select Next and select create user in the Review and create section In the Retrieve password section you can choose to Download the .csv file to your computer and save it in a safe place. "
},
{
	"uri": "//localhost:1313/",
	"title": "Data Lake",
	"tags": [],
	"description": "",
	"content": "Working with Data Lake Overall In this lab, you will learn the basic concepts and practices of Data Lake Architecture using Amazon S3, AWS Lake Formation, and Athena.\nContent Introduction Preparation Data collection and storage Automated Cataloging with Glue + Data Catalog Analyze with Athena "
},
{
	"uri": "//localhost:1313/1-introduce/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "Session Manager is a function within the AWS System Manager service, SSM provides verifiable and secure version management without opening incoming ports, without Bastion Host or SSH key management. Session Manager also makes it easy to comply with corporate policies that require controlled access to instances, strict security practices, and fully auditable logs with instance access details, while still providing end-users with one-click cross-platform access to your managed instances.\nBy using Session Manager, you get the following advantages that traditional methods do not have:\nNo need to open port 22 for SSH protocol, so it is more secure. Can be configured so that the connection does not need to go outside the internet, so it is more secure. No need to manage the server\u0026rsquo;s private key to connect to SSH. Centralized management of users using AWS IAM. Access to the server easily and simply with one click. Faster access time than traditional methods like SSH Support many different operating systems such as Linux, Windows, MacOS Log the connection sessions and commands executed while connecting to the server. With the above advantages, you can use Session Manager instead of using Bastion host technique to save us time and money when managing Bastion server.\n"
},
{
	"uri": "//localhost:1313/3-datacollectionanstorage/3.1-s3data/",
	"title": "Put data into S3 bucket ",
	"tags": [],
	"description": "",
	"content": "Test\n"
},
{
	"uri": "//localhost:1313/2-prerequiste/2.2-createiamrole/",
	"title": "Create IAM Role",
	"tags": [],
	"description": "",
	"content": "Create IAM Role In this step, we will proceed to create IAM Role. In this IAM Role, the policy AmazonSSMManagedInstanceCore will be assigned, this is the policy that allows the EC2 server to communicate with the Session Manager.\nGo to IAM service administration interface In the left navigation bar, click Roles. Click Create role. Click AWS service and click EC2. Click Next: Permissions. In the Search box, enter AmazonSSMManagedInstanceCore and press Enter to search for this policy. Click the policy AmazonSSMManagedInstanceCore. Click Next: Tags. Click Next: Review. Name the Role SSM-Role in Role Name Click Create Role . Next, we will make the connection to the EC2 servers we created with Session Manager.\n"
},
{
	"uri": "//localhost:1313/4-datacatalog/4.2-gluejobetlprocessedzone/",
	"title": "Glue Crawler cho Processed Zone ",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/2-prerequiste/",
	"title": "Preparation ",
	"tags": [],
	"description": "",
	"content": "In this step, we will:\nCreate an IAM User to grant access to the necessary AWS services for individuals or practice groups. Create an S3 bucket to help you store data. Contents Prepare IAM User Prepare IAM Role Create IAM Policy Prepare S3 "
},
{
	"uri": "//localhost:1313/4-datacatalog/4.4-etlprocessedtocurated/",
	"title": "Tạo Glue Job ETL → Processed Zone ",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/3-datacollectionanstorage/",
	"title": "Data collection and storage ",
	"tags": [],
	"description": "",
	"content": "Test\n"
},
{
	"uri": "//localhost:1313/4-datacatalog/4.3-gluecrawlerprocessedzone/",
	"title": "Glue Crawler cho Processed Zone ",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/2-prerequiste/2.3-createpolicy/",
	"title": "Preparation ",
	"tags": [],
	"description": "",
	"content": "Test\n"
},
{
	"uri": "//localhost:1313/4-datacatalog/",
	"title": "Data Catalog ",
	"tags": [],
	"description": "",
	"content": "Nội dung "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.4-creates3/",
	"title": "Preparation ",
	"tags": [],
	"description": "",
	"content": "Test\n"
},
{
	"uri": "//localhost:1313/4-datacatalog/4.5-gluecrawlercuratedzone/",
	"title": "Glue Crawler cho Curated Zone ",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/5-athena/",
	"title": "Phân tích với Athena ",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/3-datacollectionanstorage/3.2-firehosestream/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/3-datacollectionanstorage/3.3-kinesisdatagenerator/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/4-datacatalog/4.1-gluecrawlerrawzone/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]